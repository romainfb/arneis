// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int    @id @default(autoincrement())
  email     String?
  password  String?
  lastName  String?
  firstName String?
}

model ArticleOrder {
  id            Int      @id @default(autoincrement())
  orderId       Int?
  productId     Int?
  quantity      Int?
  price         Int?
  order         Order?   @relation(fields: [orderId], references: [id])
  product       Product? @relation(fields: [productId], references: [id])
}

model Category {
  id         Int       @id @default(autoincrement())
  label      String?
  thumbnail  String?
  products   Product[]
}

model Client {
  id        Int       @id @default(autoincrement())
  email     String?
  password  String?
  address   String?
  city      String?
  createdAt DateTime?
  lastName  String?
  firstName String?
  orders    Order[]
}

model Order {
  id            Int            @id @default(autoincrement())
  clientId      Int?
  status        String?
  createdAt     DateTime?
  orderDate     DateTime?
  client        Client?        @relation(fields: [clientId], references: [id])
  ArticleOrder  ArticleOrder[]
}

model Material {
  id         Int       @id @default(autoincrement())
  label      String?
  products   Product[]
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String?
  price         Int?
  stock         Int?
  description   String?
  categoryId    Int?
  materialId    Int?
  Category      Category?      @relation(fields: [categoryId], references: [id])
  Material      Material?      @relation(fields: [materialId], references: [id])
  ArticleOrder  ArticleOrder[]
  images        ProductGallery[]
}

model ProductGallery {
  id          Int      @id @default(autoincrement())
  url         String
  productId   Int
  Product     Product  @relation(fields: [productId], references: [id])
}